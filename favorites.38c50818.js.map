{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-6f0ef316a64a5ef3.js","src/js/favorites/favorites.js","src/js/favorites/fetchFavorites.js","node_modules/@parcel/runtime-js/lib/runtime-643dfc921be0cb37.js","src/js/favorites/cardElement.js","src/js/favorites/renderFavorites.js","src/js/favorites/filterElement.js","node_modules/@parcel/runtime-js/lib/runtime-45407774686830df.js","src/js/favorites/empty.js","src/js/favorites/config.js","src/js/favorites/favoritRefs.js","src/js/favorites/quantyityOfPages.js","src/js/favorites/handleClickFunctions.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dFrGZ\\\":\\\"favorites.38c50818.js\\\",\\\"lp5u4\\\":\\\"sprite.7aa8ebb7.svg\\\",\\\"caW06\\\":\\\"elements.5eac9335.jpg\\\",\\\"h5tdm\\\":\\\"favorites.a401af79.js\\\"}\"));","import '../header/header';\nimport '../header/_switch-themes';\nimport { renderCategories, renderCards } from './renderFavorites';\nimport { emptyRendering, getValuesOfStorage } from './config';\nimport { handleFilter, handleHeartClick } from './handleClickFunctions';\nimport {\n  conRef,\n  favoritesFilterRef,\n  favoritesCardsRef,\n  paginationRef,\n} from './favoritRefs';\nimport { renderQuantityOfPages } from './quantyityOfPages';\n\nconst PER_PAGE = 12;\nlet page = 1;\n\n// -------------------------------------------основна функція та логіка сторінки Favorites--------------------------\n\nconst renderPageFavorites = async () => {\n  const keyOfLocalStorage = getValuesOfStorage('favorites'); // Беремо значення з localStorage\n  paginationRef.style.display = 'none';\n\n  // =--------------------------------------LocalStorage не існує або порожній масив----------------------\n  if (!keyOfLocalStorage || keyOfLocalStorage.length === 0) {\n    emptyRendering(conRef);\n    return;\n  }\n\n  // ---------------------------------------Рендеримо сторінку-----------------------------------\n  const dataCategories = await renderCategories(keyOfLocalStorage);\n  const dataCards = await renderCards(keyOfLocalStorage, page, PER_PAGE);\n  favoritesFilterRef.innerHTML = dataCategories;\n  favoritesCardsRef.innerHTML = dataCards;\n\n  const cardContainer = document.querySelector('.favorites__list-cards');\n\n  // перевіряємо довжину значення з LocalStorage-------------------------\n\n  const pageCount = keyOfLocalStorage.length;\n\n  if (pageCount < PER_PAGE) {\n    paginationRef.style.display = 'none';\n  } else {\n    const dataPages = renderQuantityOfPages(pageCount, PER_PAGE);\n    const pagBarRef = document.querySelector('.pagination-bar');\n    pagBarRef.firstElementChild.insertAdjacentHTML(\n      'beforeend',\n      dataPages.join('')\n    );\n\n    paginationRef.style.display = 'flex';\n  }\n\n  // додаємо обробник подій на контейнер щоб обрати сердечко на всіх картках. Делегування подій---------------------------------\n  cardContainer.addEventListener('click', handleHeartClick);\n\n  // ==============Додаємо обробник подій на фільтр===============\n\n  const filterRef = document.querySelector('.favorites__list-filter');\n  filterRef.addEventListener('click', handleFilter);\n};\n\nrenderPageFavorites();\n\n// const test = [\n//   { id: '6462a8f74c3d0ddd28897fc2', category: 'Seafood' },\n//   { id: '6462a8f74c3d0ddd28897fde', category: 'Dessert' },\n//   { id: '6462a8f74c3d0ddd28897feb', category: 'Chicken' },\n//   { id: '6462a8f74c3d0ddd28897fc1', category: 'Dessert' },\n//   { id: '6462a8f74c3d0ddd28897fb9', category: 'Lamb' },\n//   { id: '6462a8f74c3d0ddd28897fbc', category: 'Beef' },\n//   { id: '6462a8f74c3d0ddd28897fbf', category: 'Chicken' },\n//   { id: '6462a8f74c3d0ddd288980d4', category: 'Soup' },\n// ];\n\n// localStorage.setItem('favorites', JSON.stringify(test));\nimport '../footer/footer';\n//*modal\nimport '../modal/modal-order/modal-order';\nimport '../modal/modal-rating/modal-rating';\nimport '../modal/modal-recipe/modal-recipe';\n","import axios from 'axios';\n\nconst URL_RECIPE = 'https://tasty-treats-backend.p.goit.global/api/recipes/';\n\nexport const fetchRecipeById = async id => {\n  try {\n    const response = await axios.get(`${URL_RECIPE}${id}`);\n    if (response.status === 404) {\n      throw new Error('Page not found error 404');\n    }\n\n    return response;\n  } catch {\n    throw new Error('an error occurred while fetching the images from the API');\n  }\n};\n\n// -------------------------------------------------отримує масив id та повертає масив об'єктів рецептів-----------------------\nexport const fetchRecipeDataForIds = async ids => {\n  const fetchPromises = ids.map(async id => {\n    const result = await fetchRecipeById(id);\n    return result;\n  });\n\n  const results = await Promise.all(fetchPromises);\n  return results;\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lp5u4\")).toString();","import icons from '../../images/sprite.svg';\n\n//  Створюємо розмітку зірок-------------------\n\nconst createRatingStars = rating => {\n  const roundRating = Math.round(rating);\n  const activeStarMarkup = `<svg class=\"favorites__star-active\"><use href=\"${icons}#icon-star\"></use></svg>`;\n  const inactiveStarMarkup = `<svg class=\"favorites__star-notActive\"><use href=\"${icons}#icon-star-grey\"></use></svg>`;\n  let starsArray = [];\n  for (let i = 1; i <= 5; i += 1) {\n    starsArray.push(i > roundRating ? inactiveStarMarkup : activeStarMarkup);\n  }\n  return starsArray.join('');\n};\n\n// Створюємо розмітку рейтингу=------------------------\nconst renderRating = value => {\n  return `<div class='favorites__rating'>\n              <div class=\"favorites__rating-body\">\n                <div class=\"favorites__rating-active\"><div class='favorites__cards-rating'>${value}</div>${createRatingStars(\n    value\n  )}</div>\n                <div class=\"favorites__rating-items\">\n                  <input type=\"radio\" class=\"favorites__rating-item\" value=\"1\" name=\"rating\">\n                  <input type=\"radio\" class=\"favorites__rating-item\" value=\"2\" name=\"rating\">\n                  <input type=\"radio\" class=\"favorites__rating-item\" value=\"3\" name=\"rating\">\n                  <input type=\"radio\" class=\"favorites__rating-item\" value=\"4\" name=\"rating\">\n                  <input type=\"radio\" class=\"favorites__rating-item\" value=\"5\" name=\"rating\">\n                </div>\n              </div>\n  \n    </div>`;\n};\n\n// Створюємо розмітку карток---------------------------------------------\nconst renderListCards = listOfCard => {\n  return listOfCard.map(({ data }) => {\n    return `\n        <li class=\"favorites__cards-item\">\n        <button type=\"button\" id=\"#${\n          data._id\n        }\" class=\"icon-button\" data-category=\"${\n      data.category\n    }\"><svg class=\"favorites__heart heart-isActive\"><use href=\"${icons}#icon-heart\"></use></svg></button>\n          <img src=\"${data.preview}\" alt=\"${data.title}\" width=\"335\">\n          <div class=\"favorites__cards-thumb\">\n            <h2 class=\"favorites__cards-title\">${data.title}</h2>\n            <p class=\"favorites__cards-text\">${data.description}</p>\n            <div class=\"favorites__rating-thumb\">\n              ${renderRating(data.rating)}\n              <button class=\"favorites__cards-btn\">See recipe</button>\n            </div>\n          </div>\n        </li>`;\n  });\n};\n\n// -----------------------отримує масив картинок і повертає markup списку-------------------------\nexport const renderCardsMarkup = cardsData => {\n  const cardMarkupCard = renderListCards(cardsData).join('');\n  return cardMarkupCard;\n};\n","import { fetchRecipeDataForIds } from './fetchFavorites';\nimport { renderCardsMarkup } from './cardElement';\nimport { markupCategory } from './filterElement';\n\n// -----------------------------рендер списку категорій-------------------------------------\n// ПРиймає масив об'єктів і повертає markup елементу категорій\n\nexport const renderCategories = async storageValue => {\n  try {\n    const results = await fetchRecipeDataForIds(storageValue.map(el => el.id));\n    const arrayOfCategories = results.map(el => el.data.category);\n\n    const markup = markupCategory(arrayOfCategories);\n    return markup;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//----------рендер списку карток-----------------\n// ПРиймає масив об'єктів, дійсну сторінку, скільки карток на сторінці і повертає markup елементу карток\n\nexport const renderCards = async (storageValue, currentPage, PerPage) => {\n  try {\n    const results = await fetchRecipeDataForIds(storageValue.map(el => el.id));\n    const startIndex = (currentPage - 1) * PerPage;\n    const endIndex = startIndex + PerPage;\n    const slicedResults = results.slice(startIndex, endIndex);\n\n    const cardMarkupCard = renderCardsMarkup(slicedResults);\n    return cardMarkupCard;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// -------------------------------------------------отримує масив всіх категорій та повертає розмітку-------------------------\n\nconst renderListOfCategories = listOfCategories => {\n  const zeroMarkup = `<li><button type=\"button\" class=\"favorites__filter-btn favorites__active-btn\">All categories</button></li>`;\n  const uniqueArray = [];\n  for (const item of listOfCategories) {\n    if (!uniqueArray.includes(item)) {\n      uniqueArray.push(item);\n    }\n  }\n  const markup = uniqueArray.map(el => {\n    return `<li><button type=\"button\" class=\"favorites__filter-btn\">${el}</button></li>`;\n  });\n  markup.unshift(zeroMarkup);\n  return markup;\n};\n\n// -----------------------отримує масив категорій і повертає markup списку-------------------------\n\nexport const markupCategory = categories => {\n  const markupCategory = renderListOfCategories(categories).join('');\n  return markupCategory;\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"caW06\")).toString();","import elements from '../../images/favorites/elements.jpg';\n\nexport const empty = () => {\n  const text = `It appears that you haven't added any recipes to your favorites yet. To get started, you can add recipes that you like to your favorites for easier access in the future.`;\n  return `\n    <img src=\"${elements}\" class=\"favorites__empty-img\" alt=\"chef's hat\">\n    <p class=\"favorites__text\">${text}</p>`;\n};\n\nexport const emptyItem = () => {\n  return `<li class=\"favorites__list-cards-thumb\">${empty()}</li>`;\n};\n","import { empty } from './empty';\n\n// ========================================викликаємо коли потрібно завантажити порожню сторінку-======================\nconst emptyRendering = conRef => {\n  conRef.classList.add('empty');\n  conRef.insertAdjacentHTML('beforeend', empty());\n};\n\n// =================================парсимо localStorage========================================\nconst getValuesOfStorage = storedData => {\n  return JSON.parse(localStorage.getItem(storedData));\n};\n\nexport { emptyRendering, getValuesOfStorage };\n","const conRef = document.querySelector('.favorites__empty');\nconst favImgRef = document.querySelector('.favorites__img');\nconst favoritesFilterRef = document.querySelector('.favorites__list-filter');\nconst favoritesCardsRef = document.querySelector('.favorites__list-cards');\nconst paginationRef = document.querySelector('.pagination-bar');\nconst favoritesListCardsThumb = document.querySelector(\n  '.favorites__list-cards-thumb'\n);\n\nexport {\n  conRef,\n  favImgRef,\n  favoritesFilterRef,\n  favoritesCardsRef,\n  paginationRef,\n  favoritesListCardsThumb,\n};\n","export const renderQuantityOfPages = quantity => {\n  const arrOfPagBtn = [];\n  for (let i = 1; i <= quantity; i += 1) {\n    arrOfPagBtn.push(createPaginationEl(i));\n  }\n  return arrOfPagBtn;\n};\n\nconst createPaginationEl = num => {\n  return `<div class=\"pag-btn-block pag-btn-block-container\"><button id=\"pag-btn-1\" class=\"pag-btn-white pag-btn-number\" type=\"button\" aria-label=\"page 1\">${num}</button></div>`;\n};\n","import {\n  favoritesCardsRef,\n  paginationRef,\n  favoritesListCardsThumb,\n} from './favoritRefs';\nimport { renderCards } from './renderFavorites';\nimport { getValuesOfStorage } from './config';\nimport { renderQuantityOfPages } from './quantyityOfPages';\nimport { emptyItem } from './empty';\n// ========================================змінюємао кнопку на активну====================================\nconst PER_PAGE = 12;\nlet page = 1;\n\nconst checkFilterBtn = evt => {\n  if (evt.classList.contains('favorites__filter-btn')) {\n    // ==================================Знімаємо клас з усіх кнопок====================================\n    const activeButton = document.querySelector(\n      '.favorites__filter-btn.favorites__active-btn'\n    );\n    if (activeButton) {\n      activeButton.classList.remove('favorites__active-btn');\n    }\n\n    // ==============================================Додаємо клас до натиснутої кнопки============================\n    evt.classList.add('favorites__active-btn');\n  }\n};\n\n// ================================================callback для фільтра====================================\n\nconst handleFilter = async evt => {\n  const target = evt.target;\n  checkFilterBtn(target);\n  const filterValue = getValuesOfStorage('favorites');\n\n  // ===================================================перевіряємо якщо натиснули на All category====================================\n  if (target.textContent === 'All categories') {\n    page = 1; //скидаємо сторінку\n    const totalPageCount = Math.ceil(filterValue.length / PER_PAGE);\n    updatePagination(totalPageCount); // оновлюємо пагінацію\n\n    const data = await renderCards(filterValue, page, PER_PAGE);\n    favoritesCardsRef.innerHTML = data;\n    return;\n  }\n\n  // фільтруємо масив і залишаємо ті які співпадають з натиснутою категорією\n  const arrayFromFilter = filterValue.filter(\n    el => el.category === target.textContent\n  );\n\n  if (arrayFromFilter.length !== 0) {\n    page = 1; // Скидаємо сторінку натисканні на кнопку категорії\n    const totalPageCount = Math.ceil(arrayFromFilter.length / PER_PAGE);\n    updatePagination(totalPageCount);\n\n    const data = await renderCards(arrayFromFilter, page, PER_PAGE);\n    favoritesCardsRef.style.justifyContent = 'start';\n    favoritesCardsRef.innerHTML = data;\n  } else {\n    favoritesCardsRef.style.justifyContent = 'center';\n    favoritesCardsRef.innerHTML = emptyItem();\n  }\n};\n\n// ===============Оновлюємо пагінацію=============\nconst updatePagination = pageCount => {\n  if (pageCount === 1) {\n    paginationRef.style.display = 'none';\n    return;\n  }\n  const dataPages = renderQuantityOfPages(pageCount, PER_PAGE);\n  paginationRef.firstElementChild.innerHTML = dataPages.join('');\n  paginationRef.style.display = 'flex';\n};\n\nconst handlePaginationClick = async evt => {\n  if (evt.target.classList.contains('pag-btn-number')) {\n    page = Number(evt.target.textContent);\n\n    const filterValue = getValuesOfStorage('favorites');\n    console.log(filterValue);\n    const data = await renderCards(filterValue, page, PER_PAGE);\n    favoritesCardsRef.innerHTML = data;\n  }\n};\n\n// ----------------------------------heart---------------------------------\n\nconst handleHeartClick = evt => {\n  const target = evt.target.closest('.icon-button');\n\n  if (target) {\n    const buttonId = target.id.slice(1);\n    const dataValue = target.getAttribute('data-category');\n    const StorageData = getValuesOfStorage('favorites');\n    let arrayOfId = [];\n\n    if (StorageData) {\n      arrayOfId = StorageData;\n    }\n\n    const index = arrayOfId.findIndex(el => el.id === buttonId);\n\n    if (index !== -1) {\n      arrayOfId.splice(index, 1);\n    } else {\n      arrayOfId.push({ id: buttonId, category: dataValue });\n    }\n\n    localStorage.setItem('favorites', JSON.stringify(arrayOfId));\n\n    const heartIcon = target.querySelector('.favorites__heart');\n    heartIcon.classList.toggle('heart-isActive');\n  }\n};\n\nexport { handleFilter, handleHeartClick, handlePaginationClick };\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$2shzp","$8b8063b2acbd50e3$export$2e163e96fa949595","async","ids","fetchPromises","map","result","response","default","get","status","$8b8063b2acbd50e3$export$8b3900bd3f5573f5","Promise","all","$a4212a039eccdb43$exports","URL","resolve","import","meta","url","toString","$5f7e1b9ec6f9c4c3$var$renderRating","value","rating","roundRating","Math","round","activeStarMarkup","$parcel$interopDefault","inactiveStarMarkup","starsArray","push","join","$5f7e1b9ec6f9c4c3$var$createRatingStars","$5f7e1b9ec6f9c4c3$export$57b5eb27cd6afc7f","cardsData","listOfCard","data","_id","category","preview","title","description","$72b32af5efe95449$export$f20c709553293f6e","storageValue","arrayOfCategories","el","listOfCategories","uniqueArray","item","includes","markup","unshift","$e732cd385ecefa3b$var$renderListOfCategories","error","console","log","$72b32af5efe95449$export$e483d52d8d6686e1","currentPage","PerPage","results","startIndex","endIndex","slicedResults","slice","$007e134574724c63$exports","$487efe729d40fdbc$export$6e22c362a0406a2c","$15ed73aa1bcc8f6f$export$1baa0dd82a199dd5","storedData","localStorage","getItem","$b7cfca99dcf9fd0b$export$26f6cf3552c0da70","document","querySelector","$b7cfca99dcf9fd0b$export$e4d7b082f4ef04f8","$b7cfca99dcf9fd0b$export$e381592fe1942431","$b7cfca99dcf9fd0b$export$282ede1754680aae","$b1b15dc1ea0afa2a$export$df294ee40aa20ed5","quantity","arrOfPagBtn","$b1b15dc1ea0afa2a$var$createPaginationEl","num","$5e39c8340853a8a7$var$page","$5e39c8340853a8a7$export$39f716e135fca2df","evt","target","classList","contains","activeButton","remove","add","$5e39c8340853a8a7$var$checkFilterBtn","filterValue","textContent","totalPageCount","ceil","$5e39c8340853a8a7$var$updatePagination","innerHTML","arrayFromFilter","filter","style","justifyContent","pageCount","display","dataPages","firstElementChild","$5e39c8340853a8a7$export$187f9df95fa3e57d","closest","buttonId","dataValue","getAttribute","StorageData","arrayOfId","index","findIndex","splice","setItem","stringify","toggle","keyOfLocalStorage","conRef","insertAdjacentHTML","dataCategories","dataCards","cardContainer","addEventListener","$92b704da29f36d38$var$renderPageFavorites"],"version":3,"file":"favorites.38c50818.js.map"}